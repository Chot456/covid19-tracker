{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chot\\\\Desktop\\\\covid_tracker\\\\covid-19-tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }); // STATE = How to write a variable in REACT\n  // https://disease.sh/v3/covid-19/countries\n  // USEEFFECT = Runs a piece of code\n  // based on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []); // onload get countries data from API\n\n  useEffect(() => {\n    // async -> send a request , wait for it, to do something with it\n    // get countries from API\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          //United states\n          value: country.countryInfo.iso2 // UK, USA, FR\n\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []); //Function for changing Select menu\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode); // https://disease.sh/v3/covid-19/countries/[COUNTRY_CODE]\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); // All of the data from the country response\n\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.todayRecovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.todayDeaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }, \"World new cases\")), /*#__PURE__*/React.createElement(LineGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/chot/Desktop/covid_tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","InfoBox","Map","Table","sortData","LineGraph","MenuItem","FormControl","Select","Card","CardContent","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","todayCases","cases","todayRecovered","todayDeaths","mapZoom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\"\n\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\"\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  // STATE = How to write a variable in REACT\n\n  // https://disease.sh/v3/covid-19/countries\n\n  // USEEFFECT = Runs a piece of code\n  // based on a given condition\n\n\n  useEffect(() =>{\n\tfetch(\"https://disease.sh/v3/covid-19/all\")\n\t.then(response => response.json())\n\t.then(data => {\n\t\tsetCountryInfo(data);\n\t})\n  },[]);\n\n  // onload get countries data from API\n  useEffect(() => {\n      // async -> send a request , wait for it, to do something with it\n\n\t  // get countries from API\n      const getCountriesData = async () => {\n        await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n              name: country.country, //United states\n              value: country.countryInfo.iso2  // UK, USA, FR\n            }));\n\t\t\t\n\t\t\tconst sortedData = sortData(data);\n\t\t\tsetTableData(sortedData)\n            setCountries(countries)\n        });\n      };\n\n      getCountriesData();\n  }, []);\n\n  //Function for changing Select menu\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\tsetCountry(countryCode)\n\t\n\t// https://disease.sh/v3/covid-19/countries/[COUNTRY_CODE]\n\tconst url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n\tawait fetch(url)\n\t.then(response => response.json())\n\t.then(data=> {\n\t\tsetCountry(countryCode);\n\t\t\n\t\t// All of the data from the country response\n\t\tsetCountryInfo(data);\n\t});\n  };\n\n  return (\n    <div className=\"app\">\n\t\t<div className=\"app__left\">\n\t\t\t<div className=\"app__header\">\n\t\t\t\t<h1>COVID-19 TRACKER</h1>\n\t\t\t\t<FormControl className=\"app__dropdown\">\n\t\t\t\t\t<Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n\t\t\t\t\t\t<MenuItem value=\"worldwide\">Worldwide</MenuItem>   \n\t\t\t\t\t\t{\n\t\t\t\t\t\tcountries.map((country) =>(\n\t\t\t\t\t\t\t<MenuItem value={country.value}>{country.name}</MenuItem>    \n\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Select> \n\t\t\t\t</FormControl>\n\t\t\t</div>\n\t\t\n\t\t\t<div className=\"app__stats\">\n\t\t\t\t<InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n\n\t\t\t\t<InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.todayRecovered} />\n\n\t\t\t\t<InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.todayDeaths} />\n\t\t\t</div> \n\n\t\t\t<Map\n\t\t\t\tcenter={mapCenter}\n\t\t\t\tzoom={mapZoom}\n\t\t\t/>\n\n\t\t</div>\n\t\t<div className=\"app__right\">\n\t\t\t<Card>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<h3>Live Cases by Country</h3>\n\t\t\t\t\t<Table countries={tableData} />\n\n\t\t\t\t\t<h3>World new cases</h3>\n\t\t\t\t</CardContent>\n\t\t\t\t<LineGraph></LineGraph>\n\t\t\t</Card>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}