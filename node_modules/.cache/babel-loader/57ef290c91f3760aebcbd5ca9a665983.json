{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\chot\\\\Desktop\\\\covid_tracker\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{Circle,Popup}from\"react-leaflet\";import numeral from\"numeral\";var casesTypeColors={cases:{hex:\"#CC1034\",multiplier:800},recovered:{hex:\"#7dd71d\",multiplier:1200},deaths:{hex:\"#fb4443\",multiplier:2000}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);return sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};// Draw circles on the map with interactive tooltop\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex// calculating circle sizes\n,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"0\";};","map":{"version":3,"sources":["C:/Users/chot/Desktop/covid_tracker/covid-19-tracker/src/util.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":"6LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACHC,GAAG,CAAE,SADF,CAEHC,UAAU,CAAE,GAFT,CADa,CAMpBC,SAAS,CAAE,CACPF,GAAG,CAAE,SADE,CAEPC,UAAU,CAAE,IAFL,CANS,CAWpBE,MAAM,CAAE,CACJH,GAAG,CAAE,SADD,CAEJC,UAAU,CAAE,IAFR,CAXY,CAAxB,CAiBA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CAEA,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACT,KAAF,CAAUU,CAAC,CAACV,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAApC,EAAhB,CAAP,CACH,CAJM,CAMP;AACA,MAAO,IAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,IAAD,KAAOM,CAAAA,SAAP,2DAAiB,OAAjB,OACzBN,CAAAA,IAAI,CAACO,GAAL,CAAS,SAACC,OAAD,qBACL,oBAAC,MAAD,EACI,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ,CAEI,WAAW,CAAE,GAFjB,CAGI,KAAK,CAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHtC,CAII,SAAS,CAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAEtC;AANJ,CAOI,MAAM,CACFiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UARnE,eAWI,oBAAC,KAAD,mBACI,4CACI,2BACI,SAAS,CAAC,WADd,CAEI,KAAK,CAAE,CAAEkB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFX,EADJ,cAII,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CAJJ,cAKI,2BAAK,SAAS,CAAC,gBAAf,YAAwChB,OAAO,CAACgB,OAAO,CAACd,KAAT,CAAP,CAAuBsB,MAAvB,CAA8B,KAA9B,CAAxC,CALJ,cAMI,2BAAK,SAAS,CAAC,gBAAf,gBAA4CxB,OAAO,CAACgB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CAA5C,CANJ,cAOI,2BAAK,SAAS,CAAC,aAAf,aAAsCxB,OAAO,CAACgB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CAAtC,CAPJ,CADJ,CAXJ,CADK,EAAT,CADyB,EAAtB,CA6BP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAAUA,CAAAA,IAAI,YAAO1B,OAAO,CAAC0B,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAAP,EAAwC,GAAtD,EAAxB","sourcesContent":["import React from \"react\"\r\nimport { Circle, Popup } from \"react-leaflet\"\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        multiplier: 800,\r\n    },\r\n\r\n    recovered: {\r\n        hex: \"#7dd71d\",\r\n        multiplier: 1200,\r\n    },\r\n\r\n    deaths: {\r\n        hex: \"#fb4443\",\r\n        multiplier: 2000,\r\n    },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\n// Draw circles on the map with interactive tooltop\r\nexport const showDataOnMap = (data, casesType='cases') => (\r\n    data.map((country) => (\r\n        <Circle\r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            color={casesTypeColors[casesType].hex}\r\n            fillColor={casesTypeColors[casesType].hex}\r\n\r\n            // calculating circle sizes\r\n            radius={\r\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n            }\r\n        >\r\n            <Popup>\r\n                <div>\r\n                    <div\r\n                        className=\"info-flag\" \r\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\r\n                    <div className=\"info-name\">{country.country}</div>\r\n                    <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\r\n                    <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n                    <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\r\n                </div>\r\n            </Popup>\r\n        </Circle>\r\n    ))\r\n);\r\n\r\n\r\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"0\";\r\n"]},"metadata":{},"sourceType":"module"}